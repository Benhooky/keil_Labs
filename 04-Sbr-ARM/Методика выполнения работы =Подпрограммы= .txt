
        Методика выполнения работы по теме "Подпрограммы в ARM"

1. Хочется увидеть в дизассемблированном исполняемом коде все действия, 
 которые относятся к организации ПП, а именно:

  1.1. Вызов с запоминанием адреса возврата
  1.2. Передачу параметров и возврат результата
  1.3. Сохранение и восстановление контекста
  1.4. Выделение памяти под локальные переменные
  1.5. Организацию отдельных стековых кадров для каждого
     экземпляра ПП.
     
2. Вначале студентам следует детально разобрать результат трансляции примера, который
 уже был рассмотрен на консультации. Нужно найти и разобрать в деталях фрагменты машинного
 кода, который реализует перечисленные выше действия 1.1. - 1.4.

3. Затем каждому студенту следует взять в качестве отправного варианта свой собственный
 исходный текст, использованный в работе Cmd-ARM. В нем нужно в одном из блоков условной
 конструкции if  изменить строку, в которой производится вычисление и присваивание значения
 элементу массива таким образом, чтобы вычисление значения оказалось перенесено в функцию.
 Текст рассмотренного примера демонстрирует, как это может быть сделано.
 
    Во втором блоке конструкции if добавьте действия, в которых присутствует операция
 деления. В системе команд v.4T отсутствует команда деления, поэтому транслятор подключает
 вызов стандартной подпрограммы, которая выполняет деление двух операндов программно.
 Каждый студент может самостоятельно выбрать тип переменных, которые участвуют в операции
 деления. В зависимости от типа, время выполнения операации деления может быть различным.
 
 Выполняя эту часть работы учащийся должен сделать следующее:
 
  3.1. Выполнить в своем варианте исходного текста на языке Си все упомянутые выше изменения.
  
  3.2. Оттранслировать программу в режиме "без оптимизации", перейти в режим отладки, изучить
     дизассеблированный код, скопировать его в отдельный текстовый файл и подробно откоммен-
	 тировать, приблизительно в том объеме, в котором на консультации разбирался пример-прототип.
	 По своим комментариям следует быть готовым давать объяснения преподавателю.
	 
  3.3. Изобразить структуру сформированного программой стекового кадра, отметить на ней
     назначение и содержимое регистров, которые компилятор использовал для различных целей.
	 Объяснить, что это за цели, в частности, как организованы:
	 
	 а) сохранение контекста в вашем варианте, какие регистры какими командами и в каком 
	  порядке сохраняются, а перед возвратом из ПП - как происходит восстановление контекста;
	  
	 б) выделение памяти под локальные объекты, сколько памяти и для чего выделяется, какие
	  для этого использованы команды;
	  
	 в) обращение к локальным объектам, находящимся в стековом кадре;
	 
	 г) освобождение места в стеке, занятого локальными объектами;
	 
	 д) восстановление контекста вызывающей части, как и какими командами это делается, 
	  восстановление исходного состояния стека;
	 
	 е) возврат результата из подпрограммы;
	 
	 ж) возврат управления в вызывающую часть программы;
	 
	 и) манипуляции с результатом, сформированным в подпрограмме.
	 
	  Следует быть готовым продемонстрировать и объяснить эти действия, выполняя фрагменты
	  программы на симуляторе среды Keil.
	 
  5. Измените уровень оптимизации на Level 1. Сравните дизассемблированный код с тем, что
    получился при отсутствии оптимизации. Отметьте, какие из (лишних) действий компилятор
	удалил (опустил) при оптимизации.
	 
  6. Дополнительное задание для желающих получить дополнительные бонусы.
    Изменить программу так, чтобы операция деления оказалась внутри функции. Разобрать, что
	происходит при вложенном вызове подпрограмм. Изобразить структуру стека, содержащего
	два последовательно сформированных стековых кадра. Отметить те особенности, которые 
	одинаковы для двух вызовов подпрограмм и те, которые в двух подпрограммах различаются
	(если таковые найдутся)
	
  7. Исследуйте, как происходит передача управления из start-up кода на функцию main().
    Прокомментируйте результат вашего исследования.
	

	
	
	
	




